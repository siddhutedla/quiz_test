generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name         String        @db.VarChar(255)
  email        String        @unique @db.VarChar(255)
  linkedinUrl  String?       @map("linkedin_url") @db.VarChar(500)
  createdAt    DateTime?     @default(now()) @map("created_at") @db.Timestamptz(6)
  quizAttempts QuizAttempt[]

  @@map("users")
}

model QuizAttempt {
  id             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId         String?   @map("user_id") @db.Uuid
  score          Int
  totalQuestions Int       @map("total_questions")
  timeTaken      Int       @map("time_taken")
  answers        Json
  scorePercentage Decimal  @map("score_percentage") @db.Decimal(5, 2)
  categoryScores Json?     @map("category_scores")
  completedAt    DateTime? @default(now()) @map("completed_at") @db.Timestamptz(6)
  user           User?     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("quiz_attempts")
}

model QuizQuestion {
  id            Int     @id @default(autoincrement())
  question      String
  options       Json?
  correctAnswer String? @map("correct_answer") @db.VarChar(255)
  category      String? @db.VarChar(100)
  difficulty    String? @default("medium") @db.VarChar(20)
  type          String? @default("multiple_choice") @db.VarChar(20)
  maxLength     Int?    @map("max_length")
  createdAt     DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)

  @@map("quiz_questions")
}
